From 8f6a027d473f9b4796509158962d8ddf89fbe086 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Jonathan=20M=C3=BCller?= <git@foonathan.net>
Date: Wed, 20 Nov 2019 15:24:09 +0100
Subject: [PATCH 5/5] Add funding

---
 .github/FUNDING.yml | 3 +++
 README.md           | 4 +---
 2 files changed, 4 insertions(+), 3 deletions(-)
 create mode 100644 .github/FUNDING.yml

diff --git a/.github/FUNDING.yml b/.github/FUNDING.yml
new file mode 100644
index 0000000..47c85de
--- /dev/null
+++ b/.github/FUNDING.yml
@@ -0,0 +1,3 @@
+patreon: foonathan
+custom: ['https://jonathanmueller.dev/support-me/']
+
diff --git a/README.md b/README.md
index 637b3d6..d0e179b 100644
--- a/README.md
+++ b/README.md
@@ -6,9 +6,7 @@
 The C++ STL allocator model has various flaws. For example, they are fixed to a certain type, because they are almost necessarily required to be templates. So you can't easily share a single allocator for multiple types. In addition, you can only get a copy from the containers and not the original allocator object. At least with C++11 they are allowed to be stateful and so can be made object not instance based. But still, the model has many flaws.
 Over the course of the years many solutions have been proposed, for example [EASTL]. This library is another. But instead of trying to change the STL, it works with the current implementation.
 
-[![Patreon](https://c5.patreon.com/external/logo/become_a_patron_button.png)](https://patreon.com/foonathan)
-
-If you like this project, consider supporting me on Patreon.
+If you like this project, consider [supporting me](https://jonathanmueller.dev/support-me/).
 It would really help!
 
 ## Features
-- 
2.34.1

