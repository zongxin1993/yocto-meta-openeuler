From e11f196cff586404cffb16a467bf42058694c08e Mon Sep 17 00:00:00 2001
From: hmilylmk <liumingkai@huawei.com>
Date: Mon, 6 Feb 2023 10:06:36 +0800
Subject: [PATCH] change toolchain for clang build

Signed-off-by: hmilylmk <liumingkai@huawei.com>
---
 config/compiler/BUILD.gn | 6 +++++-
 toolchain/linux/BUILD.gn | 7 +++----
 2 files changed, 8 insertions(+), 5 deletions(-)

diff --git a/config/compiler/BUILD.gn b/config/compiler/BUILD.gn
index 14c07bb..8fd4ba5 100755
--- a/config/compiler/BUILD.gn
+++ b/config/compiler/BUILD.gn
@@ -863,7 +863,11 @@ config("default_warnings") {
 
     # Don't warn about "maybe" uninitialized. Clang doesn't include this
     # in -Wall but gcc does, and it gives false positives.
-    cflags += [ "-Wno-maybe-uninitialized" ]
+    # cflags += [ "-Wno-maybe-uninitialized" ]
+    cflags += [ "-Wno-unused-private-field" ]
+    cflags += [ "-Wno-empty-body" ]
+    cflags += [ "-Wno-pointer-to-enum-cast" ]
+    cflags += [ "-Wno-unused-but-set-variable" ]
     cflags += [ "-Wno-deprecated-declarations" ]
 
     # GCC assumes 'this' is never nullptr and optimizes away code
diff --git a/toolchain/linux/BUILD.gn b/toolchain/linux/BUILD.gn
index c811cf9..108fa96 100755
--- a/toolchain/linux/BUILD.gn
+++ b/toolchain/linux/BUILD.gn
@@ -22,11 +22,10 @@ clang_toolchain("clang_arm64") {
 }
 
 gcc_toolchain("arm64") {
-  tool_path = rebase_path("//toolchain/bin", root_build_dir)
-  toolprefix = "${tool_path}/aarch64-openeuler-linux-gnu-"
+  toolprefix = "aarch64-openeuler-linux-"
 
-  cc = "${toolprefix}gcc"
-  cxx = "${toolprefix}g++"
+  cc = "${toolprefix}clang"
+  cxx = "${toolprefix}clang++"
 
   ar = "${toolprefix}ar"
   ld = cxx
-- 
2.34.1

