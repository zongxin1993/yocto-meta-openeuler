DISTRO = "openeuler"
DISTRO_NAME = "openEuler embedded(openEuler Embedded Reference Distro)"
DISTRO_VERSION = "22.03"
DISTRO_CODENAME = "openEuler${@d.getVar('DISTRO_VERSION').replace('.', '_')}"
SDK_VENDOR = "-openeulersdk"
SDK_VERSION = "${@d.getVar('DISTRO_VERSION').replace('snapshot-${METADATA_REVISION}', 'snapshot')}"
SDK_VERSION[vardepvalue] = "${SDK_VERSION}"

MAINTAINER = "openEuler <dev@openeuler.org>"

TARGET_VENDOR = "-openeuler"

LOCALCONF_VERSION = "2"

# Override these in openeuler embedded based distros
#OPENEULER_DEFAULT_DISTRO_FEATURES = ""
OPENEULER_DEFAULT_DISTRO_FEATURES = "pam"
#OPENEULER_DEFAULT_EXTRA_RDEPENDS = "packagegroup-core-boot"
#OPENEULER_DEFAULT_EXTRA_RRECOMMENDS = "kernel-module-af-packet"

DISTRO_FEATURES ?= "${DISTRO_FEATURES_DEFAULT} ${OPENEULER_DEFAULT_DISTRO_FEATURES}"

PREFERRED_VERSION_linux-openeuler ?= "5.10%"

SDK_NAME = "${DISTRO}-${TCLIBC}-${SDKMACHINE}-${IMAGE_BASENAME}-${TUNE_PKGARCH}-${MACHINE}"
# set default sdk install directory
SDKPATH = "/opt/${DISTRO}/${SDK_VERSION}"

DISTRO_EXTRA_RDEPENDS += "${OPENEULER_DEFAULT_EXTRA_RDEPENDS}"
DISTRO_EXTRA_RRECOMMENDS += "${OPENEULER_DEFAULT_EXTRA_RRECOMMENDS}"

TCLIBCAPPEND = ""
TCLIBC = "glibc"

# currently, we have  no sources mirror for openEuler, so use
# yocto mirror instead
PREMIRRORS ??= "\
bzr://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n \
cvs://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n \
git://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n \
gitsm://.*/.* http://downloads.yoctoproject.org/mirror/sources/ \n \
hg://.*/.*    http://downloads.yoctoproject.org/mirror/sources/ \n \
osc://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n \
p4://.*/.*    http://downloads.yoctoproject.org/mirror/sources/ \n \
svn://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n"

# QA check settings - a little stricter than the OE-Core defaults
# (none currently necessary as we now match OE-Core)
#WARN_TO_ERROR_QA = "X"
#WARN_QA_remove = "${WARN_TO_ERROR_QA}"
#ERROR_QA_append = " ${WARN_TO_ERROR_QA}"

# for embedded case, the mechanism of update-alternatives is not
# enabled to only allow just one copy of binary, to save memory
# footprint. Therefore, if multiple packages provide the same file,
# conflict error will be reported
INHERIT_remove += "update-alternatives"
# As update-alternatives is disabled, no need to do qa check of
# missing-update-alternatives
WARN_QA_remove += "missing-update-alternatives"

INHERIT += "uninative"

INHERIT += "reproducible_build"

BB_SIGNATURE_HANDLER ?= "OEEquivHash"
BB_HASHSERVE ??= "auto"


PREFERRED_PROVIDER_virtual/kernel = "linux-openeuler"
#add by lisimin,delete depends
#UNINATIVE_CHECKSUM[x86_64] = "dead"
#UNINATIVE_URL = "unset"

INHIBIT_PACKAGE_DEBUG_SPLIT = "1"

# for all .bb file, OPENEULER_SP_DIR  will be included
# in file path
FILESEXTRAPATHS_prepend = "${OPENEULER_SP_DIR}:"


# PACKAGE_NO_LOCALE is variable in package.bbclass to control
# whether do_split_locales() for pacakges.
# openEuler Embedded is used for scenarios with limit memory, aslo
# in current image, no locale related pacakges are included.
# so we use variable to disable the generation of locale related packages
# it will save some build time, also no extra locale-* packages
PACKAGE_NO_LOCALE ?= "1"


export RPMDEPS = "default"
INHERIT += "get_rpmdeps"

#disable the file checksum of fetch
do_fetch[file-checksums] = ""
SDK_INCLUDE_BUILDTOOLS = "0"
require conf/distro/openeuler-bsp.conf
