From ae9d9d059de737a97923f3caf383129f537aec42 Mon Sep 17 00:00:00 2001
From: hanzongcheng <hanzongcheng@huawei.com>
Date: Thu, 2 Mar 2023 16:36:15 +0800
Subject: [PATCH] RPI3/RPI4: revert rpi3_pwr_down_wfi()

* rpi3_pwr_down_wfi() cannot be used to power off the cores after
  testing, use rpi3_pwr_domain_pwr_down_wfi as an implementation of
  pwr_domain_pwr_down_wfi.

Signed-off-by: hanzongcheng <hanzongcheng@huawei.com>

diff --git a/plat/rpi/common/rpi3_pm.c b/plat/rpi/common/rpi3_pm.c
index 86c61f7..8327026 100644
--- a/plat/rpi/common/rpi3_pm.c
+++ b/plat/rpi/common/rpi3_pm.c
@@ -174,32 +174,6 @@ static void rpi3_pwr_domain_on_finish(const psci_power_state_t *target_state)
 #endif
 }
 
-static void __dead2 rpi3_pwr_down_wfi(
-		const psci_power_state_t *target_state)
-{
-	uintptr_t hold_base = PLAT_RPI3_TM_HOLD_BASE;
-	unsigned int pos = plat_my_core_pos();
-
-	if (pos == 0) {
-		/*
-		 * The secondaries will always be in a wait
-		 * for warm boot on reset, but the BSP needs
-		 * to be able to distinguish between waiting
-		 * for warm boot (e.g. after psci_off, waiting
-		 * for psci_on) and a cold boot.
-		 */
-		mmio_write_64(hold_base, PLAT_RPI3_TM_HOLD_STATE_BSP_OFF);
-		/* No cache maintenance here, we run with caches off already. */
-		dsb();
-		isb();
-	}
-
-	write_rmr_el3(RMR_EL3_RR_BIT | RMR_EL3_AA64_BIT);
-
-	while (1)
-		;
-}
-
 /*******************************************************************************
  * Platform handlers for system reset and system off.
  ******************************************************************************/
@@ -265,7 +239,6 @@ static const plat_psci_ops_t plat_rpi3_psci_pm_ops = {
 	.pwr_domain_pwr_down_wfi = rpi3_pwr_domain_pwr_down_wfi,
 	.pwr_domain_on = rpi3_pwr_domain_on,
 	.pwr_domain_on_finish = rpi3_pwr_domain_on_finish,
-	.pwr_domain_pwr_down_wfi = rpi3_pwr_down_wfi,
 	.system_off = rpi3_system_off,
 	.system_reset = rpi3_system_reset,
 	.validate_power_state = rpi3_validate_power_state,
-- 
2.34.1

