#!/bin/bash

check_build()
{
    if [ -z "${BUILD_ARCH}" ];then
        return 1;
    fi

    if [ -z "${BUILD_IMAGE}" ];then
        return 1;
    fi

    if [ -z "${BUILD_WORK}" ];then
        return 1;
    fi

    return 0
}

build()
{
    test -d ${BUILD_WORK} || mkdir -p ${BUILD_WORK}

    local srcDir=${BUILD_WORK}/src
    test -d ${srcDir} || mkdir -p ${srcDir}

    local yoctoDir=${srcDir}/yocto-meta-openeuler
    test -d ${yoctoDir} && rm -rf ${yoctoDir}

    local baseDir=`pwd`/../../yocto-meta-openeuler
    cp -r ${baseDir} $srcDir

    local shellDir=${BUILD_WORK}/build.sh
    test -f ${shellDir} && rm -f ${shellDir}

    local buildDir=build_${BUILD_ARCH}_${BUILD_IMAGE}

    cat > ${shellDir} << EOF
. /opt/buildtools/nativesdk/environment-setup-x86_64-pokysdk-linux
. /home/openeuler/work/src/yocto-meta-openeuler/scripts/compile.sh ${BUILD_ARCH} /home/openeuler/work/${buildDir}
bitbake ${BUILD_IMAGE}
EOF

    local volumes=${BUILD_WORK}:/home/openeuler/work
    local image=swr.cn-north-4.myhuaweicloud.com/openeuler-embedded/openeuler-container:latest
    local command=/home/openeuler/work/build.sh
    local user=openeuler

    oebuilder_docker exec -v ${volumes} -i ${image} -c ${command} -u ${user}
}

use_agent()
{
    cat << EOF
Usage:
this is help information
EOF

    return 1
}

check_env()
{
    SYSTEM=""

    # check system type for installing next
    grep -q "Ubuntu" /etc/os-release && SYSTEM="ubuntu"
    grep -q "Centos" /etc/os-release && SYSTEM="centos"

    if [ `which docker` == "" ];then
        if [ ${SYSTEM} == "ubuntu" ];then
            sudo apt install docker
        fi
        if [ ${SYSTEM} == "centos" ];then
            sudo yum install docker
        fi
    fi

    if [ `which python3` == "" ];then
        if [ ${SYSTEM} == "ubuntu" ];then
            sudo apt install python3
        fi
        if [ ${SYSTEM} == "centos" ];then
            sudo yum install python3
        fi
    fi
}

testing()
{
    oebuilder_test
}

main()
{
    check_env

    if [ ${1} == "build" ];then
        BUILD_ARCH="$2"
        BUILD_IMAGE="$3"
        BUILD_WORK="$4"
        check_build || use_agent || return 1
        build
    fi
}

main "$@"